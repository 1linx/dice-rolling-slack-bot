<!DOCTYPE html>
<html>
<head>
	<!-- jQuery CDN link -->
	<script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>

	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

	<!-- Optional theme -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

	<!-- Latest compiled and minified JavaScript -->
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

	<style>
	/* This should be moved to own file. */
	#swDice h5, #swDice h6 {
		text-align: center;
	}

	.pos-dice {
		background-color: #EEFFEE;
		display: block;
		margin-left: auto;
		margin-right: auto;
	}	

	.neg-dice {
		background-color: #FFEEEE;
		display: block;
		margin-left: auto;
		margin-right: auto;
	}

	.dice-images {
		margin-top: 5px;
		margin-bottom: 5px;
		cursor: pointer; 
	}
	.sw-dice-roll-btn {
		
		display: block;
		margin-left: auto;
		margin-right: auto;
		margin-top:10px;
		margin-bottom:10px;
	}

	.faded {
		opacity: 0.5;
	}

	</style>

	<title>Dice roller</title>
</head>
<body>
<div class="container">
<br>
<br>
	<div class="col-md-2"></div>

	<div class="col-md-8">

		<div class="page-header">
		  <h1>Roll some dice</h1>		  
			  <input type="text" class="form-control" placeholder="Your name" id="nameInput" aria-describedby="basic-addon2">		
		</div>

	  <ul class="nav nav-tabs">
	    <li><a data-toggle="tab" href="#stdDice">Standard Dice</a></li>
	    <li class="active"><a data-toggle="tab" href="#swDice">Star Wars Dice</a></li>
	    <li><a data-toggle="tab" href="#advDice">Advanced Rolls</a></li>
	    <!-- <li><a data-toggle="tab" href="#menu3">Menu 3</a></li> -->
	  </ul>
	  
	  <div class="tab-content">

	    <div id="stdDice" class="tab-pane fade">
			<br>
	        <button id="1d4" class="btn roll-btn">Roll 1D4</button>
			<button id="1d6" class="btn btn-success roll-btn">Roll 1D6</button>
			<button id="1d8" class="btn roll-btn">Roll 1D8</button>
			<button id="1d10" class="btn roll-btn">Roll 1D10</button>
			<button id="1d20" class="btn roll-btn">Roll 1D20</button>
			<button id="1d12" class="btn roll-btn">Roll 1D12</button>
			<button id="1d100" class="btn roll-btn">Roll 1D100</button>
			<!-- <input type="text" class="form-control"> -->
			<br>
			<h5>Add a modifier:</h5>
			<input type="number" class="form-control" id="modifierValue">
			<br>
	    </div>

	    <div id="swDice" class="tab-pane fade in active">
    		<br>
			<div class="col-md-5 pos-dice">
				<h5>Positive</h5>
				<img id="sw_boost1" class="dice-images faded" src="./static/imgs/boost.png"/>
				<img id="sw_boost2" class="dice-images faded" src="./static/imgs/boost.png"/>
				<img id="sw_boost3" class="dice-images faded" src="./static/imgs/boost.png"/>
				<img id="sw_boost4" class="dice-images faded" src="./static/imgs/boost.png"/>
				<img id="sw_boost5" class="dice-images faded" src="./static/imgs/boost.png"/>
				<img id="sw_boost6" class="dice-images faded" src="./static/imgs/boost.png"/>
    			<br>
				<img id="sw_ability1" class="dice-images faded" src="./static/imgs/ability.png"/>
				<img id="sw_ability2" class="dice-images faded" src="./static/imgs/ability.png"/>
				<img id="sw_ability3" class="dice-images faded" src="./static/imgs/ability.png"/>
				<img id="sw_ability4" class="dice-images faded" src="./static/imgs/ability.png"/>
				<img id="sw_ability5" class="dice-images faded" src="./static/imgs/ability.png"/>
				<img id="sw_ability6" class="dice-images faded" src="./static/imgs/ability.png"/>
    			<br>
				<img id="sw_proficiency1" class="dice-images faded" src="./static/imgs/proficiency.png"/>
				<img id="sw_proficiency2" class="dice-images faded" src="./static/imgs/proficiency.png"/>
				<img id="sw_proficiency3" class="dice-images faded" src="./static/imgs/proficiency.png"/>
				<img id="sw_proficiency4" class="dice-images faded" src="./static/imgs/proficiency.png"/>
				<img id="sw_proficiency5" class="dice-images faded" src="./static/imgs/proficiency.png"/>
				<img id="sw_proficiency6" class="dice-images faded" src="./static/imgs/proficiency.png"/>
			</div>
			<div class="col-md-5 neg-dice">
				<h5>Negative</h5>
				<img id="sw_setback1" class="dice-images faded" src="./static/imgs/setback.png"/>
				<img id="sw_setback2" class="dice-images faded" src="./static/imgs/setback.png"/>
				<img id="sw_setback3" class="dice-images faded" src="./static/imgs/setback.png"/>
				<img id="sw_setback4" class="dice-images faded" src="./static/imgs/setback.png"/>
				<img id="sw_setback5" class="dice-images faded" src="./static/imgs/setback.png"/>
				<img id="sw_setback6" class="dice-images faded" src="./static/imgs/setback.png"/>
    			<br>
				<img id="sw_difficulty1" class="dice-images faded" src="./static/imgs/difficulty.png"/>
				<img id="sw_difficulty2" class="dice-images faded" src="./static/imgs/difficulty.png"/>
				<img id="sw_difficulty3" class="dice-images faded" src="./static/imgs/difficulty.png"/>
				<img id="sw_difficulty4" class="dice-images faded" src="./static/imgs/difficulty.png"/>
				<img id="sw_difficulty5" class="dice-images faded" src="./static/imgs/difficulty.png"/>
				<img id="sw_difficulty6" class="dice-images faded" src="./static/imgs/difficulty.png"/>
    			<br>
				<img id="sw_challenge1" class="dice-images faded" src="./static/imgs/challenge.png"/>
				<img id="sw_challenge2" class="dice-images faded" src="./static/imgs/challenge.png"/>
				<img id="sw_challenge3" class="dice-images faded" src="./static/imgs/challenge.png"/>
				<img id="sw_challenge4" class="dice-images faded" src="./static/imgs/challenge.png"/>
				<img id="sw_challenge5" class="dice-images faded" src="./static/imgs/challenge.png"/>
				<img id="sw_challenge6" class="dice-images faded" src="./static/imgs/challenge.png"/>
			</div>
			<div class="col-md-2">
				<h5>Other</h5>
				<h6>Force</h6>
				<img id="sw_force" class="dice-images" src="./static/imgs/force.png"/>
    			<br>
				<h6>Percentiles</h6>
				<img id="sw_percentile" class="dice-images" src="./static/imgs/percentile.png"/>
			</div>
			<div class="col-md-12 sw-dice-roll-btn">
				<button id="sw_roll" class="btn sw-roll-btn">Roll</button>				
			</div>
	    </div>

	    <div id="advDice" class="tab-pane fade">
    		<br>
			<p>Coming soon.</p>
	    </div>

	  </div>	

	</div>

	<div class="col-md-2"></div>

</div>

</body>
<script type="text/javascript">
$(document).ready(function(e) {	

	var slackLink = <%- JSON.stringify(slackLink) %>; // should come from somewhere else?
	var username;

	// ----------------------------------------------------------- Standard rolls -----------------------------------------------------------

	function diceRoll(number, min, max) {
		var diceRunningTotal = 0;
		// console.log("Rolling a D" + max);
		for (var numberOfRolls = 0; numberOfRolls < number; numberOfRolls++) {
			let aSingleDie = (Math.random() * ((max + 1) - min) + min);
			aSingleDie = Math.floor(aSingleDie);		
			// console.log("You rolled a " + aSingleDie);
			diceRunningTotal += aSingleDie;
		}
		// console.log("running total is " + diceRunningTotal);
		
	return diceRunningTotal;

	}

	function buildPayload(diceType, numberRolled, username = "dicebot") {
		var payload = 'payload={';
		payload += '"channel": "#rolldembones"';
		payload += ',"username": "' + username + '"';
		payload += ',"icon_emoji": ":game_die:"';
		payload += ',"text": "Rolled ' + diceType + ' for a result of: *' + numberRolled  + '*"';
		payload += '}';
		return payload;
	}
	
	var rollResult;

	$(".roll-btn").on("click touch", function() {
		var btn_id = this.id;
		var diceNum = parseInt(btn_id[0]);
		var diceMax = parseInt(btn_id.slice(2));
		var modifierValue = parseInt($("#modifierValue").val());
		if (isNaN(modifierValue)) {
			modifierValue = 0;
		}
		
		rollResult = diceRoll(diceNum,1,diceMax) + modifierValue;
		
		username = $('#nameInput').val();
		if (username === "") {
			username = undefined;
		}
		var payload = buildPayload(btn_id, rollResult, username);
		$.post(slackLink, payload
		);
		console.log(payload);
	});
	// --------------------------------------------------------- End Standard rolls ---------------------------------------------------------	

	// ----------------------------------------------------------- SW Rolls -----------------------------------------------------------
	function swDiceRoll(activeDice) {
		var diceRunningTotal = {"success": 0, "advantage": 0, "triumph": 0, "failure": 0, "threat": 0, "despair": 0};

		for (var swDiceType in activeDice) {
			let val = activeDice[swDiceType];
			//  console.log(swDiceType + ": " + val);
		}

		for (var swDiceType in activeDice) {		
			var rolls = activeDice[swDiceType];
			// console.log("rolls: " + rolls);
			for (var numberOfRolls = 0; numberOfRolls < rolls; numberOfRolls++) {
				let aSingleDie = (Math.random() * ((diceTypeTrack[swDiceType] + 1) - 1) + 1);
				aSingleDie = Math.floor(aSingleDie);		
				console.log("Your dice is: " + swDiceType + ", " + "You rolled a " + aSingleDie);
				let results = getDiceFaces(swDiceType, aSingleDie);
				for (var result in results) {
					let symbol = results[result];
					console.log("result: " + results[result]);					
					diceRunningTotal[symbol]++;

					// add extra success or failiure for triumphs and despair
					if (symbol == "triumph") { diceRunningTotal["success"]++; }
					if (symbol == "despair") { diceRunningTotal["failure"]++; }
				}

			}

		}

	console.log(diceRunningTotal);		
	var finalRunningTotal = adjustDiceTotals(diceRunningTotal);
	console.log(finalRunningTotal);
	return finalRunningTotal;

	}

	function adjustDiceTotals(diceRunningTotal) {
		if (diceRunningTotal["success"] > diceRunningTotal["failure"] ) {
			diceRunningTotal["success"] -= diceRunningTotal["failure"];
			diceRunningTotal["failure"] = 0;
		  } else if (diceRunningTotal["failure"] > diceRunningTotal["success"] ) {
			diceRunningTotal["failure"] -= diceRunningTotal["success"];
			diceRunningTotal["success"] = 0;
		  } else {
			  diceRunningTotal["success"] = 0;
			  diceRunningTotal["failure"] = 0;
		  }

		if (diceRunningTotal["advantage"] > diceRunningTotal["threat"] ) {
			diceRunningTotal["advantage"] -= diceRunningTotal["threat"];
			diceRunningTotal["threat"] = 0;
		  } else if (diceRunningTotal["threat"] > diceRunningTotal["advantage"] ) {
			diceRunningTotal["threat"] -= diceRunningTotal["advantage"];
			diceRunningTotal["advantage"] = 0;
		  } else {
			  diceRunningTotal["advantage"] = 0;
			  diceRunningTotal["threat"] = 0;
		  }
		
		return diceRunningTotal;

	}

	function getDiceFaces(type, side) {
		var swDiceJson = { 
			"dieType" : {
				"sw_boost" : {"1":[], "2":[], "3":["success"], "4":["success", "advantage"], "5":["advantage", "advantage"], "6":["advantage"]},
				"sw_ability" : {"1":[], "2":["success"], "3":["success"], "4":["success", "success"], "5":["advantage"], "6":["advantage"], "7":["success", "advantage"], "8":["advantage", "advantage"]},
				"sw_proficiency" : {"1":[], "2":["success"], "3":["success"], "4":["success", "success"], "5":["success", "success"], "6":["advantage"], "7":["success", "advantage"], "8":["success", "advantage"], "9":["success", "advantage"], "10":["advantage", "advantage"], "11":["advantage", "advantage"], "12":["triumph"]},
				"sw_setback" : {"1":[], "2":[], "3":["failure"], "4":["failure"], "5":["threat"], "6":["threat"]},
				"sw_difficulty" : {"1":[], "2":["failure"], "3":["failure", "failure"], "4":["threat"], "5":["threat"], "6":["threat"], "7":["threat", "threat"], "8":["failure", "threat"]},
				"sw_challenge" : {"1":[], "2":["failure"], "3":["failure"], "4":["failure", "failure"], "5":["failure", "failure"], "6":["threat"], "7":["threat"], "8":["failure", "threat"], "9":["failure", "threat"], "10":["threat", "threat"], "11":["threat", "threat"], "12":["despair"]},
				"sw_force" : {"1":["black"], "2":["black"], "3":["black"], "4":["black"], "5":["black"], "6":["black"], "7":["black", "black"], "8":["white"], "9":["white"], 
				"10":["white", "white"], "11":["white", "white"], "12":["white", "white"]}
			}
		};
		return swDiceJson["dieType"][type][side];
	}

	var diceTypeTrack = {"sw_boost": 6, "sw_ability": 8, "sw_proficiency": 12, "sw_setback": 6, "sw_difficulty": 8, "sw_challenge": 12};
	var dicePositionTrack = [1,2,3,4,5,6];
	var diceActiveLevel = {"sw_boost" : 0, "sw_ability" : 0, "sw_proficiency" : 0, "sw_setback" : 0, "sw_difficulty" : 0, "sw_challenge" : 0};
	var diceColorMap = {"sw_boost": "Blue", "sw_ability": "Green", "sw_proficiency": "Yellow", "sw_setback": "Black", "sw_difficulty": "Purple", "sw_challenge": "Red"};
	var forceQuotes = {
	"1": "The dark side I sense in you.", 
	"2": "Don't try to frighten us with your sorcerer's ways.", 
	"3": "Your hate has made you powerful.", 
	"4": "If once you start down the dark path, forever it will dominate your destiny.", 
	"5": "You don't know the power of the dark side.", 
	"6": "Your feeble skills are no match for the power of the dark side!", 
	"7": "Beware of the dark side.", 
	"8": "Hokey religions and ancient weapons are no match for a good blaster at your side, kid.", 
	"9": "The force is strong with this one.", 
	"10": "There is something strong than fear — far stronger. The Force.", 
	"11": "My ally is the Force, and a powerful ally it is.",
	"12": "I am one with the Force, and the Force will guide me."
}
	
	
	function toggleClassesOnSwDice(elementId, position){
		console.log("input: " + elementId + ", " + position);
		var newDiceCountValue = position;
		
		// clear all faded classes selected set of dice
		for	(var i = 1; i <= 6; i++) {
			$("#"+elementId + i).addClass("faded");
		}

		// if same dice clicked as previously, clear eveything and move on
		if (position == diceActiveLevel[elementId]) {
			diceActiveLevel[elementId] = 0;
			return;
		}

		// toggle all dice below and including the one clicked
		while (position >= 0) {
			$("#"+elementId + position).toggleClass("faded");
			position--;
		}
		
		diceActiveLevel[elementId] = newDiceCountValue;
		console.log(diceActiveLevel);
	}

	
	function addClickActionToSwDiceIcons(diceTypeTrack) {
		let typeHolderArr = [];
		for (var type in diceTypeTrack) {
			typeHolderArr.push(type);
		}
		typeHolderArr.forEach( function(dieType) {
			dicePositionTrack.forEach( function(position){
				$("#"+ dieType + position).on("click touch", function(){
					toggleClassesOnSwDice(dieType, position);
				});
			});
		});
	}
	addClickActionToSwDiceIcons(diceTypeTrack);

	// build payload to sent to Slack link
	function buildSwPayload(diceActiveLevel, rollResults, username = "dicebot", force = false) {

		// different function for force dice. If not force dice do this...
		if (force == false) {

			var payload = 'payload={';
			payload += '"channel": "#rolldembones"';
			payload += ',"username": "' + username + '"';
			payload += ',"icon_emoji": ":sw_lightsabers:"';
			payload += ',"text": "';

			payload += 'Rolled:';
			
			// outputs all the dice rolled by the user
			for (var die in diceActiveLevel) {
				let dieVal = diceActiveLevel[die];
				if (diceActiveLevel[die] > 0 ) {
					payload += ' ' + diceActiveLevel[die] + ' ' +  diceColorMap[die];
				}			
			}
			payload += '. ';		

			// clarify whether more than 0 succeses have been achieved. Otherwise can get confusing
			// especially with the extra success added by triumphs
			if (rollResults.success > 0) {
				payload += '*Success*';
			} else {
				payload += '*Failure*';			
			}

			// Ends witha full stop if no symbols to display
			if (rollResults.success > 0 || rollResults.advantage > 0 || rollResults.failure > 0 || rollResults.threat > 0  || rollResults.triumph > 0  || rollResults.despair > 0) {
				payload += ': ';
			} else {
				payload += '.';
			}

			// inserts name of dice (e.g. "advantage") and wraps it up in the emoji format (e.g. :sw_advantage:)
			for (var resultKey in rollResults) {
				let resultVal = rollResults[resultKey];
				for (var r = 0; r < resultVal; r++)
				payload += ':sw_' + resultKey + ':'
			}
			
			payload += '"';
			payload += '}';
			return payload;

		} else { // ... otherwise it is a force dice, so do this

			var payload = 'payload={';
			payload += '"channel": "#rolldembones"';
			payload += ',"username": "' + username + '"';
			payload += ',"icon_emoji": ":sw_lightsabers:"';
			payload += ',"text": "';

			if (rollResults[0] == "black" ) {					
					payload += '_\\\"' + forceQuotes[diceRoll(1,1,7)] + '\\\"_ ';	
			} else if (rollResults[0] == "white") {
					payload += '_\\\"' + forceQuotes[diceRoll(1,8,12)] + '\\\"_ ';					
			}

			for (var result in rollResults) {	
				let resultVal = rollResults[result]					
				payload += ':sw_f_' + resultVal + ':'
			}		
			
			payload += '"';
			payload += '}';
			return payload;
		}
	}

	$("#sw_roll").on("click touch", function() {

		// make sure some dice have actually been selected before firing a post to slack...
		var diceCounter = 0;
		$.each(diceActiveLevel, function(index, value) {
			diceCounter += value;
		});

		// ...then do this
		if (diceCounter !== 0) {

			var rollResults = swDiceRoll(diceActiveLevel);

			username = $('#nameInput').val();
			if (username === "") { username = undefined; }

			var payload = buildSwPayload(diceActiveLevel, rollResults, username);
			// $.post(slackLink, payload
			// );

			console.log(payload);
		}
	});

	$("#sw_force").on("click touch", function() {

		// use simple roller for this
		var rollResult = getDiceFaces("sw_force", diceRoll(1,1,12));		

		username = $('#nameInput').val();
		if (username === "") { username = undefined; }

		// shares same buildSwPayload function as other dice, so pass empty array because there is no dice active level, the result array, username and force == true.
		var payload = buildSwPayload([], rollResult, username, true);
		$.post(slackLink, payload
		);

		console.log(payload);
	});
	// --------------------------------------------------------- End SW rolls ---------------------------------------------------------
	
});
</script>
</html>